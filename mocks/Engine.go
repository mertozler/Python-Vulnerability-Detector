// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	models "github.com/mertozler/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// Engine is an autogenerated mock type for the Engine type
type Engine struct {
	mock.Mock
}

// NewScanResults provides a mock function with given fields: projectId
func (_m *Engine) NewScanResults(projectId string) (error, models.ScanData) {
	ret := _m.Called(projectId)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(projectId)
	} else {
		r0 = ret.Error(0)
	}

	var r1 models.ScanData
	if rf, ok := ret.Get(1).(func(string) models.ScanData); ok {
		r1 = rf(projectId)
	} else {
		r1 = ret.Get(1).(models.ScanData)
	}

	return r0, r1
}

type mockConstructorTestingTNewEngine interface {
	mock.TestingT
	Cleanup(func())
}

// NewEngine creates a new instance of Engine. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewEngine(t mockConstructorTestingTNewEngine) *Engine {
	mock := &Engine{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
